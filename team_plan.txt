<think>
Okay, let me try to figure out how to handle this user's request. The user wants me to act as a Team Lead and follow a specific process. First, I need to get the agent list and tasks from the Project Manager. Then, create agents dynamically based on their names, models, and prompts according to a plan. After that, review their work and report back to the Project Manager. For each task, coordinate with sub-agents and present the output in a conversational text with bullet points in phases, avoiding JSON.

Hmm, the user might be part of a project management setup where they need an organized way to delegate tasks to AI agents. They could be using a tool where agents have different models or prompts for specific tasks. The key is to break down the process into phases. Let me outline the phases step by step.

First phase: Receiving the plan and agent details from the Project Manager. That involves getting the list of agents and their tasks. Need to make sure each agent has a defined role, model, and prompt. Maybe the Project Manager provides a plan that dictates these parameters.

Second phase: Dynamically creating agents. Since it's dynamic, the creation process must be flexible. Each agent's name, model, and prompts should be based on the plan. For example, if the plan includes a researcher agent using a specific model, create that agent accordingly.

Third phase: Coordinating sub-agents for each task. This means for each main task assigned, there might be sub-tasks handled by different agents. Need to manage interactions between these agents to ensure the tasks are accomplished.

Fourth phase: Reviewing the work done by agents. Each agent's output should be assessed for quality and adherence to the task. Then compile a report summarizing what was done, any issues encountered, and next steps. Present this to the Project Manager.

Wait, the user mentioned outputting conversational text with bullet points for phases. So each phase should be clearly marked with actions taken. Need to ensure the language is conversational, not too formal. Also, avoid using JSON, so use plain text with bullet points.

Let me check if I missed anything. The user wants dynamic agent creation based on the plan. That means the plan might have variables that I need to interpret when creating the agents. For example, if the plan says "research agent using model A for task B with prompt C", I need to parse that and set up the agent accordingly.

Also, coordinating sub-agents per task would involve assigning each sub-task to an appropriate agent. Maybe a workflow where each sub-agent contributes to the main task. After all sub-tasks are completed, compile the results and report.

In reviewing, the Team Lead must evaluate each agent's work. Maybe flag any issues or reassign tasks if necessary. Then, present a concise report to the Project Manager highlighting each agent's output and overall progress.

I need to structure each phase with bullet points, making it clear and easy to follow. Let me draft each phase step by step, ensuring that all the user's requirements are covered.
</think>

**Team Lead Phases: Agent Coordination & Task Execution**  

- **Phase 1: Receiving Plan & Agent Requirements**  
  - **Action:** Contact Project Manager to retrieve the agent list, task details, and project plan.  
  - **Output:** Confirm agent roles (names, models, prompts) and tasks (e.g., "Research Agent: Use Model X for Topic Y with Prompt Z").  

- **Phase 2: Dynamically Create Agents**  
  - **Action:** Generate agents based on the planâ€”assign unique names, models, and prompts.  
  - **Example:**  
    - *Agent_Researcher_001*: Model = GPT-4, Prompt = "Analyze Topic A using data sources B and C."  
    - *Agent_Designer_002*: Model = DALL-E, Prompt = "Create visuals for concept D in style E."  

- **Phase 3: Coordinate Sub-Agents for Tasks**  
  - **Action:** Assign sub-agents to specific tasks and oversee their collaboration.  
  - **Details:**  
    - For each task, activate relevant agents.  
    - Ensure sub-agents (e.g., Researcher and Designer) exchange inputs via shared context or prompts.  
    - Resolve conflicts (e.g., conflicting outputs) via reassignment or model overrides.  

- **Phase 4: Review & Report Progress**  
  - **Action:** Evaluate agent outputs for accuracy, completeness, and alignment with the plan.  
  - **Report to Project Manager:**  
    - *Agent_Researcher_001*: "Completed analysis; findings: [summary]. Next step: Review by Data Scientist."  
    - *Agent_Designer_002*: "Visuals drafted; feedback: [notes]. Status: Requires revisions."  
  - **Decision:** Propose adjustments (e.g., "Reassign task to Agent_003 if revisions exceed scope").  

- **Phase 5: Finalize & Document**  
  - **Action:** Consolidate completed tasks into deliverables.  
  - **Output:** Final report to Project Manager with agent contributions and task outcomes.  

**Next Steps:** Request new tasks or adjustments from the Project Manager.